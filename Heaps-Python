# Data-Structures-in-Python
'''
Heaps in python works with built-in method. 
-->heapify--converts a normal list into min heap i.e sorted order. 
-->heappush--adds a element into heap without altering existing elements in heap. 
-->heappop--This function returns the smallest element from heap. 
-->heapreplace--This function replaces the smallest data element with a new value supplied in the function.
'''
-------------------------------------------------------------------------------------------------------------
#heapify

import heapq
H = [21,1,45,78,3,5]
# Use heapify to rearrange the elements
heapq.heapify(H)
print(H)

'''
Output:-
[1, 3, 5, 78, 21, 45]
'''
-------------------------------------------------------------------------------------------------------------
#heappush

import heapq
H = [21,1,45,78,3,5]
# Covert to a heap
heapq.heapify(H)
print(H)
# Add element
heapq.heappush(H,8)
print(H)

'''
Output:-
[1, 3, 5, 78, 21, 45]
[1, 3, 5, 78, 21, 45, 8]
'''
-------------------------------------------------------------------------------------------------------------
#heappop

import heapq
H = [21,1,45,78,3,5]
# Create the heap
heapq.heapify(H)
print(H)
# Remove element from the heap
heapq.heappop(H)
print(H)

'''
Output:-
[1, 3, 5, 78, 21, 45]
[3, 21, 5, 78, 45]
'''
-------------------------------------------------------------------------------------------------------------
#heapreplace

import heapq
H = [21,1,45,78,3,5]
# Create the heap
heapq.heapify(H)
print(H)
# Replace an element
heapq.heapreplace(H,6)
print(H)

'''
Output:-
[1, 3, 5, 78, 21, 45]
[3, 6, 5, 78, 21, 45]
'''

